/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package deliveryvendor;

import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;

/**
 *
 * @author User
 */
public class CtmOrderHistory extends javax.swing.JPanel {
  private Customer_1 user;

    /**
     * Creates new form CtmOrderHistory
     */
    String filePath = "resources/order.txt";
    String filePath1 = "resources/Users.txt";
    int[] displayColumnIndices = {0,1,2,3,4,5,6,7,8,9,10,12,13};
    public CtmOrderHistory(Customer_1 user) {
        initComponents();
        CustomerMain obj1 = new CustomerMain(user);
                this.user = user;

        CustomerHistoryClass obj2 = new CustomerHistoryClass();
        try {
            obj2.loadTableData(filePath, displayColumnIndices,(DefaultTableModel) HistoryTable.getModel(),user.getId());
        } catch (IOException ex) {
            Logger.getLogger(CtmOrderHistory.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        HistoryTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        HistoryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        HistoryTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                HistoryTableMouseReleased(evt);
            }
        });
        jScrollPane2.setViewportView(HistoryTable);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setText("Order History");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 630, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(66, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void HistoryTableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HistoryTableMouseReleased
        // TODO add your handling code here:
        Customer_1 c = new Customer_1();
        CustomerMain obj1 = new CustomerMain(user);
        CustomerOrderClass obj2 = new CustomerOrderClass();
        DefaultTableModel model = (DefaultTableModel)HistoryTable.getModel();
        int row = HistoryTable.getSelectedRow();
        int result = JOptionPane.showConfirmDialog(
                this,
                "Do you want to reorder the order?",
                "TaskAssign",
                JOptionPane.YES_NO_OPTION);
        if(result == JOptionPane.YES_OPTION){
            String newOrderID = "O00";
            try {
                String lastID = obj2.determineLastID(filePath);
                newOrderID = "O"+obj2.incrementID(lastID);
            } catch (IOException ex) {
                Logger.getLogger(CtmOrderHistory.class.getName()).log(Level.SEVERE, null, ex);
            }            
            String Date = String.valueOf(model.getValueAt(row,1));
            String FoodName = String.valueOf(model.getValueAt(row,2));
            String SQuantity = String.valueOf(model.getValueAt(row,3));
            String SPricePaid = String.valueOf(model.getValueAt(row,4));
            Double PricePaid = Double.valueOf(SPricePaid);
            int Quantity = Integer.parseInt(SQuantity);
            String Vendor = String.valueOf(model.getValueAt(row,5));
            String VendorID = String.valueOf(model.getValueAt(row,6));
            String CustomerID = String.valueOf(model.getValueAt(row,7));
            String Status = "pending";
            String Type = String.valueOf(model.getValueAt(row,9));
            String Destination = String.valueOf(model.getValueAt(row,10));
            String DmID = "none";
            String Restaurant = String.valueOf(model.getValueAt(row,11));
            String Review = "none";            
            if(Type.equals("delivery")){
                Type = "delivery unassigned";                
            }else{
            
            }
            
            LocalDate currentDate = LocalDate.now();
            // Format the date (optional)
            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd-MM-yyyy");
            String formattedDate = currentDate.format(formatter);
            Date = formattedDate;
            
            try {
                int result1 = JOptionPane.showConfirmDialog(
                this,
                "Total amount charged is RM"+PricePaid+". Do you want to pay for the order?",
                "TaskAssign",
                JOptionPane.YES_NO_OPTION);
                if(result1 == JOptionPane.YES_OPTION){
                    System.out.println(obj1.credit);
                    System.out.println(obj1.LoginID);
                    System.out.println(user.getAmount());
                    Double credit = user.getAmount();
                    if(credit>=PricePaid){
                        String [] lines;
                        lines = obj2.readLines(filePath1);
                        obj2.Payment(lines,obj1.LoginID,this,PricePaid);
                        obj2.writeLinesToFile(filePath1, lines);                        
                        
                        String newRowData;
                        newRowData = obj2.writeNewRow(newOrderID,Date,FoodName,Quantity,String.format("%.2f",PricePaid),Vendor,VendorID,CustomerID,Status,Type,Destination,DmID,Restaurant,Review);
                        obj2.addRowWithIncrementedIDToFile(filePath, newRowData);
                        //obj2.Initialize(filePath2,lblOrderID,lblFoodName,lblFoodPrice,lblRestaurant,txtDate,txtQuantity,txtDestination,comboType);
                    }else{
                        JOptionPane.showMessageDialog(null, "Insufficient credit balance, please top up your credit.");
                    }
                }else{
                    
                }                
            } catch (IOException ex) {
                Logger.getLogger(CustomerOrder.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{
                    
        } 
    }//GEN-LAST:event_HistoryTableMouseReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable HistoryTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
