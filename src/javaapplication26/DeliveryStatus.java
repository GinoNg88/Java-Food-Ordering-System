/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package deliveryvendor;


import java.io.IOException;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author User
 */
public class DeliveryStatus extends javax.swing.JPanel {

    /**
     * Creates new form DeliveryStatus
     */
    String filePath = "resources/order.txt";
    int[] displayColumnIndices = {0,1,2,3,4,5,8,9,10,11};
    public DeliveryStatus(VendorRunner user) {
        initComponents();
        DeliveryStatusClass obj2 = new DeliveryStatusClass();
        try {
            if(obj2.checkTaskCount(filePath,displayColumnIndices, (DefaultTableModel) TaskTable.getModel(),user.getId())){
                obj2.loadTableData(filePath,displayColumnIndices, (DefaultTableModel) TaskTable.getModel(),user.getId(),lblStatus);
            }else{
                JOptionPane.showMessageDialog(this,"Something went wrong...");
            }
            
        } catch (IOException ex) {
            Logger.getLogger(DeliveryStatus.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        if("No Task Ongoing...".equals(lblStatus.getText())){
            btnReceive.setVisible(false);
        }else{
            
        }
        btnDelivered.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblStatus = new javax.swing.JLabel();
        btnReceive = new javax.swing.JButton();
        btnDelivered = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TaskTable = new javax.swing.JTable();

        lblStatus.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        lblStatus.setText("No Task Ongoing...");

        btnReceive.setText("Received the food");
        btnReceive.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReceiveActionPerformed(evt);
            }
        });

        btnDelivered.setText("Delivered the food");
        btnDelivered.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeliveredActionPerformed(evt);
            }
        });

        TaskTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(TaskTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblStatus)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(66, 66, 66)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnDelivered, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnReceive, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 555, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(55, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblStatus)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnReceive, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDelivered, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnReceiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReceiveActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel)TaskTable.getModel();
        String Status = String.valueOf(model.getValueAt(0,6));
        if(Status.equals("ready")){
            lblStatus.setText("Heading to destination...");
            btnReceive.setVisible(false);
            btnDelivered.setVisible(true);
        }else{
            JOptionPane.showMessageDialog(this, "Food is not ready to be delivered.");
        }
        
    }//GEN-LAST:event_btnReceiveActionPerformed

    private void btnDeliveredActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeliveredActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel)TaskTable.getModel();
        String OrderID = String.valueOf(model.getValueAt(0,0));
        DeliveryStatusClass obj2 = new DeliveryStatusClass();
        String [] lines;
        try {
            lines = obj2.readLines(filePath);            
            obj2.modifyAttribute(lines,8,8,OrderID,"delivered");
            obj2.writeLinesToFile(filePath, lines);
            JOptionPane.showMessageDialog(this,"Task Completed!");
            model.setRowCount(0);
            model.setColumnCount(0);
            lblStatus.setText("No Task Ongoing...");
            btnReceive.setVisible(false);
            btnDelivered.setVisible(false);
        } catch (IOException ex) {
            Logger.getLogger(DeliveryStatus.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }//GEN-LAST:event_btnDeliveredActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TaskTable;
    private javax.swing.JButton btnDelivered;
    private javax.swing.JButton btnReceive;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblStatus;
    // End of variables declaration//GEN-END:variables
}
