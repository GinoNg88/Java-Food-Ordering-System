/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package deliveryvendor;

import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author User
 */
public class OrderStatus extends javax.swing.JPanel {
    Customer_1 user = new Customer_1();

    /**
     * Creates new form OrderStatus
     */
    String filePath = "resources/order.txt";
    String filePath1 = "resources/Users.txt";
    int[] displayColumnIndices = {0,1,2,3,4,5,6,7,8,9,10};
    public OrderStatus(Customer_1 user) {
        initComponents();
        CustomerMain obj1 = new CustomerMain(user);
        this.user = user;
        OrderStatusClass obj2 = new OrderStatusClass();
        boolean OrderCount = true;
        try {
            OrderCount = obj2.checkOrderCount(filePath, displayColumnIndices, (DefaultTableModel) OrderTable.getModel(), user.getId());
            obj2.loadTableData(filePath, displayColumnIndices,(DefaultTableModel) OrderTable.getModel(),user.getId(), lblStatus);
        } catch (IOException ex) {
            Logger.getLogger(OrderStatus.class.getName()).log(Level.SEVERE, null, ex);
        }
        btnReceive.setVisible(false);
        if(OrderCount){
            
        }else{
            lblStatus.setText("No Order Chosen...");
            
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        OrderTable = new javax.swing.JTable();
        lblStatus = new javax.swing.JLabel();
        btnReceive = new javax.swing.JButton();

        OrderTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        OrderTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                OrderTableMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(OrderTable);

        lblStatus.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        lblStatus.setText("No Order Ongoing...");

        btnReceive.setText("Received the food");
        btnReceive.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReceiveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(lblStatus))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(btnReceive, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblStatus)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addComponent(btnReceive, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnReceiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReceiveActionPerformed
        // TODO add your handling code here:
        OrderStatusClass obj1 = new OrderStatusClass();
        //Customer_1 user = new Customer_1();
        //CustomerMain obj2 = new CustomerMain(user);
        DefaultTableModel model = (DefaultTableModel)OrderTable.getModel();
        int row = OrderTable.getSelectedRow();
        String OrderID = String.valueOf(model.getValueAt(row,0));
        String Status = String.valueOf(model.getValueAt(row,8));
        if(Status.equals("ready")||Status.equals("delivered")){            
            String [] lines;
            try {
                lines = obj1.readLines(filePath);
                obj1.modifyAttribute(lines,8,8,OrderID,"completed");
                obj1.writeLinesToFile(filePath, lines);
            } catch (IOException ex) {
                Logger.getLogger(OrderStatus.class.getName()).log(Level.SEVERE, null, ex);
            }
            JOptionPane.showMessageDialog(this, "Order Completed!");
            String userInput = JOptionPane.showInputDialog("Please write a review for the order:");
            if (userInput != null) {
                // User clicked OK
                String [] lines2;
                try {
                    lines2 = obj1.readLines(filePath);
                    obj1.modifyAttribute(lines2,13,13,OrderID,userInput);
                    obj1.writeLinesToFile(filePath, lines2);
                } catch (IOException ex) {
                    Logger.getLogger(OrderStatus.class.getName()).log(Level.SEVERE, null, ex);
                }
                JOptionPane.showMessageDialog(this, "Thank you for your review.");
            } else {
                // User clicked Cancel or closed the dialog
            
            }
            model.setRowCount(0);
            model.setColumnCount(0);
            try {
                obj1.loadTableData(filePath, displayColumnIndices,model,user.getId(), lblStatus);
            } catch (IOException ex) {
                Logger.getLogger(OrderStatus.class.getName()).log(Level.SEVERE, null, ex);
            }
            lblStatus.setText("No Order Chosen...");
            btnReceive.setVisible(false);
        }else{
            JOptionPane.showMessageDialog(this, "Food is not ready to be received yet.");
        }

    }//GEN-LAST:event_btnReceiveActionPerformed

    private void OrderTableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_OrderTableMouseReleased
        // TODO add your handling code here:
        int row = OrderTable.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel)OrderTable.getModel();
        String OrderID = String.valueOf(model.getValueAt(row,0));
        String CustomerID = String.valueOf(model.getValueAt(row,7));
        String Status = String.valueOf(model.getValueAt(row,8));
        String Type = String.valueOf(model.getValueAt(row,9));
        OrderStatusClass obj1 = new OrderStatusClass();
        if("pending".equals(Status)){                               
            lblStatus.setText("Waiting for vendor to accept the order...");
            btnReceive.setVisible(false);
        }else if("preparing".equals(Status)){
            lblStatus.setText( "Vendor is preparing the food...");
            btnReceive.setVisible(false);
        }else if("canceled".equals(Status)){ 
                lblStatus.setText( "The order is canceled by vendor. Payment is refunded.");
                btnReceive.setVisible(false);
        }else if("delivered".equals(Status)){ 
                lblStatus.setText( "The order is delivered, please press the receive button.");
                btnReceive.setVisible(true);
        }else if("ready".equals(Status)){
            if(("delivery assigned").equals(Type)){
                lblStatus.setText( "The food is ready, delivery man is on their way...");
                btnReceive.setVisible(false);
            }else if(("delivery unassigned").equals(Type)){
                lblStatus.setText( "The food is ready, please head to the restaurant ASAP.");
                obj1.ChangeType(this,filePath,filePath1,OrderID,CustomerID);
                
            }else{
                lblStatus.setText( "The food is ready, please head to the restaurant to pick up or dine in.");
                btnReceive.setVisible(true);
            }                        
        }else{
                        
        }    
                                                                        
                    
    }//GEN-LAST:event_OrderTableMouseReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable OrderTable;
    private javax.swing.JButton btnReceive;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblStatus;
    // End of variables declaration//GEN-END:variables
}
